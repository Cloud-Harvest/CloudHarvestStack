
# Description: Configuration file for the CloudHarvestAgent

# Configuration for the Agent
agent:
  connection:
    # Hostname or IP address the agent should bind to
    host: 127.0.0.1

    # Port the agent should bind to
    port: 8500

    # SSL configuration for the agent
    ssl:
      certificate: ./app/certs/harvest-self-signed.crt
      key: ./app/certs/harvest-self-signed.key

  logging:
    # Location where logs should be stored
    location: ./app/logs/

    # Logging level for the agent. Values are DEBUG, INFO, WARNING, ERROR, CRITICAL
    level: DEBUG

    # Suppress console output from the logging engine.
    # quiet: true

  # Configuration for TaskChains and Queue Management
  tasks:

    # Set which TaskChains are allowed to run on this agent. By default, all TaskChains are allowed; however, in larger
    # deployments, you may want to restrict the TaskChains that can run on a given agent, providing dedicated agents.
    accepted_chain_priorities:
      - 0   # Escalated
      - 1   # Client
      - 2   # Scheduled

    # Frequency in seconds at which the agent reports progress on running TaskChains.
    chain_progress_reporting_interval_seconds: 6

    # Prevent certain TaskChains from running on this agent by specifying the Chain's registered task name. By default,
    # all Tasks and TaskChains are allowed to run on an agent. Selective agent configuration is useful in larger
    # deployments where multiple agents run in different environments which should be otherwise isolated. By limiting
    # what task can be run by the agent, you can ensure that the agent only runs TaskChains that are compatible with
    # its environment. For instance, an agent running in AWS may not also have access to Azure, so you could restrict
    # the agent from running TaskChains with the `azure` task.
    chain_task_restrictions:
      # - task_name: aws
      #   reason: This agent is not configured to perform TaskChains with the `aws` task.

    # Maximum number of seconds a TaskChain can run before being issued the 'terminate' command.
    # Default is 7200 seconds (2 hours). Long timeouts are necessary because some tasks may take a long time to complete.
    # An example of this is the AWS KMS task, which requires a long timeout because of how the KMS API requires a
    # sequential iteration over each key to retrieve metadata (`list_keys` followed by sequential `describe_key` calls).
    chain_timeout_seconds: 7200

    # How often the agent checks for new TaskChains in the queue when it has slots available.
    queue_check_interval_seconds: 1

    # Maximum number of TaskChains within the job queue. If the queue is full, the agent will not retrieve new TaskChains
    # from the global job pool until the queue has space.
    max_chains: 10

  metrics:
    # The interval in seconds at which the agent will report metrics to the API.
    reporting_interval_seconds: 1

# Configuration for the API.
api:
  # Endpoint for the CloudHarvestApi
  host: 127.0.0.1

  # Port for the Api
  port: 8000

  # API token for authentication
  # token: api-token-here
